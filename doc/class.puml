@startuml

class Menu {
    - boolean closeFlag
    - Option[] options
    - String exitTitle
    - String title

    + Menu(String tile)
    + addOption(Option opt)
    + setExitTitle(String title)
    + show()
}

class Option {
    + Option(String title)
    + run()
}
Menu *-- Option
class OptionBook extends Option {}

class Hotel {
    Database db
    Customer customer
    + static void main()
}
enum PaymentMethod {
    ONLINE
    PHYSICAL_CARD
    PHYSICAL_CASH
}
class Customer {
    - String name
    - PaymentMethod paymentMethod
    - List<Suit> suits
    - int numPeople
    - Date startDate
    - Date endDate
    + String getName()
        + void setName(String name)
        + PaymentMethod getPaymentMethod()
        + void setPaymentMethod(PaymentMethod paymentMethod)
        + List<Suit> getSuits()
        + void setSuits(List<Suit> suits)
        + int getNumPeople()
        + void setNumPeople(int numPeople)
        + Date getStartDate()
        + void setStartDate(Date startDate)
        + Date getEndDate()
        + void setEndDate(Date endDate)
        + Customer(String name, PaymentMethod paymentMethod, List<Suit> suits, int numPeople, Date startDate, Date endDate)
}

class Activity {
    spa
    fitness
    casino
}
class Booking {
     - List<Suit> suitsList
     - Customer customer
     - Scanner sc
     + Booking(List<Suit> suitsList, Customer customer)
     + void startSession()
 }


enum ExtraService {
    BREAKFEAST
}
class Suite {
    - int suitNum
    - boolean booked
    - List<Room> rooms
    - double price
    - float holidayFactor
    - List<ExtraService> extras
    - boolean balcony
    - SuitType type
    + int getSuitNum()
        + void setSuitNum(int suitNum)
        + boolean isBooked()
        + void setBooked(boolean booked)
        + List<Room> getRooms()
        + void setRooms(List<Room> rooms)
        + double getPrice()
        + void setPrice(double price)
        + float getHolidayFactor()
        + void setHolidayFactor(float holidayFactor)
        + List<ExtraService> getExtras()
        + void setExtras(List<ExtraService> extras)
        + boolean isBalcony()
        + void setBalcony(boolean balcony)
        + SuitType getType()
        + void setType(SuitType type)
        + Suit(int suitNum, boolean booked, List<Room> rooms, double price, float holidayFactor, List<ExtraService> extras, boolean balcony, SuitType type)
}
enum SuitType {
    STANDARD
    LUXURY
}
class Room {
    - int maxPeople
    + int getMaxPeople()
    + void setMaxPeople(int maxPeople)
    + Room(int maxPeople)
}

class Database {
    Suit getSuit(int suitNum)
    addSuit(Suit suit)
    removeSuit(Suit suit)
}

class DatabaseSQLlite extends Database {

}

class Log {
    - static PrintStream out
    + static void setOutputStream(OutputStream out)

    + static void warn(String msg)
    + static void error(String msg)
    + static void flush()
}

Hotel *- Activity
Hotel *-- Database
Customer *-- PaymentMethod
Customer *-- Suite
Suite *-- Room
Suite *-- ExtraService
Suite *-- SuitType
Hotel *-- Suite
Hotel *-- Customer
Hotel *-- Booking
@enduml